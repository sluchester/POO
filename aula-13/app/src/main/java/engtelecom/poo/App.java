/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package engtelecom.poo;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;

public class App {
    public static void main(String[] args) {
        ArrayList<String> contatos = new ArrayList<>();

        contatos.add("Juca");
        contatos.add("Ana");
        contatos.add("Pedro");

        //indica quantos dados tem dentro dele
        //System.out.println("total de coantatos :" + contatos.size());

        //indica apenas a caopacidade total do vetor
        //String[] vet = new vet[100]

        String resultado = contatos.get(1);

        if(contatos.contains("Luan")){
            System.out.println("Ana é um contato");
        } else{
            System.out.println("nope");
        }

        ArrayList<String> outro = new ArrayList<>();

        outro.add("Juca");
        outro.add("Ana");
        outro.add("Pedro");

        if(contatos.equals(outro)){
            System.out.println("igual");
        }else{
            System.out.println("nope");
        }

        //criando uma nova variavel que tem a mesma referencia do objeto outro na memória
        ArrayList<String> nova = outro;

        int posicao = contatos.indexOf("Ana");
        contatos.remove(posicao);

        System.out.println(contatos);

        //contatos.add(5, "paula"); dá erro, não pode se fazer isso

        for (int i = 0; i < contatos.size(); i++) {
            System.out.println("nome " + contatos.get(i));
        }

        //for each
        for (String elemento : contatos){
            System.out.println("nome " + elemento);
        }

        //infere o tipo da variavel elemento a partir de onde está pegando
        // a partir do java 11
        for (var elemento : contatos){
            System.out.println("nome " + elemento);
        }

        //foreach usando lambda
        contatos.forEach(elemento -> {
            System.out.println("nome " + elemento);
        });

        //for each usando lambda apenas para um elemento
        contatos.forEach(elemento -> System.out.println("nome " + elemento));

        //method reference
        contatos.forEach(System.out::println);

        //contatos.removeIf(e->e.equals("ana"));

        //atribui tudo da lista para um vetor
        //String[] vetor = (String[]) contatos.toArray();

        //collections objeto que reune outros objetos
        Collections.sort(contatos);
        contatos.forEach(System.out::println);
    }
}
